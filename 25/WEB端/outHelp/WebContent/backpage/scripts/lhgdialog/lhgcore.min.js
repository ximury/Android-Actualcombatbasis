
/*!
 * lhgcore JavaScript Library v1.3.8
 * Date: 2010-02-01 23:39:11 
 * Copyright (c) 2009 - 2010 By Li Hui Gang
 */
(function () {
	var x = this, y, e = function (a, b) {
		return new e.fn.init(a, b);
	}, ja = Array.prototype.push, ka = Array.prototype.slice, S = Object.prototype.toString, la = /^#[\w-]+$/, ma = /^(\s|\u00A0)+|(\s|\u00A0)+$/g;
	e.fn = e.prototype = {init:function (a, b) {
		if (!a) {
			return this;
		}
		var c;
		b = b || document;
		if (typeof a === "string") {
			if (a.indexOf("<") === 0) {
				b = b.ownerDocument || b;
				if (c = na.exec(a)) {
					a = [b.createElement(c[1])];
				} else {
					c = T([a], [b]);
					a = c.cloneNode(true).childNodes;
				}
			} else {
				if (la.test(a) && b.nodeType === 9) {
					a = a.slice(1);
					if (c = b.getElementById(a)) {
						if (c.id !== a) {
							c = b.all[a];
						}
						this.length = 1;
						this[0] = c;
					}
					return this;
				} else {
					a = e.find(a, b);
				}
			}
		} else {
			if (a.nodeType) {
				this[0] = a;
				this.length = 1;
				return this;
			}
		}
		return this.setArray(J(a) ? a : I(a));
	}, lhgren:"LiHuiGang", setArray:function (a) {
		this.length = 0;
		ja.apply(this, a);
		return this;
	}, each:function (a) {
		return e.each(this, a);
	}, get:function (a) {
		return a === y ? ka.call(this) : this[a];
	}, eq:function (a) {
		return this.setArray([this[a]]);
	}, bind:function (a, b) {
		for (var c = 0, d = this.length; c < d; c++) {
			e.event.add(this[c], a, b);
		}
		return this;
	}, unbind:function (a, b) {
		for (var c = 0, d = this.length; c < d; c++) {
			e.event.remove(this[c], a, b);
		}
		return this;
	}, hover:function (a, b) {
		return this.mouseover(a).mouseout(b);
	}, html:function (a) {
		if (a === y) {
			return this[0] ? this[0].innerHTML : null;
		} else {
			if (/<script/i.test(a)) {
				this.empty().append(a);
			} else {
				for (var b = 0, c = this.length; b < c; b++) {
					if (this[b].nodeType === 1) {
						M(this[b].getElementsByTagName("*"));
						this[b].innerHTML = a;
					}
				}
			}
		}
		return this;
	}, text:function (a) {
		if (a === y) {
			return this[0] ? this[0].innerText ? this[0].innerText : this[0].textContent : null;
		} else {
			for (var b = 0, c = this.length; b < c; b++) {
				this[b].innerText ? (this[b].innerText = a) : (this[b].textContent = a);
			}
		}
		return this;
	}, val:function (a) {
		if (a === y) {
			var b = this[0];
			if (b) {
				if (F(b, "option")) {
					return (b.attributes.value || {}).specified ? b.value : b.text;
				}
				if (F(b, "select")) {
					a = b.selectedIndex;
					var c = [], d = b.options, g = b.type == "select-one";
					if (a < 0) {
						return null;
					}
					b = g ? a : 0;
					for (var h = g ? a + 1 : d.length; b < h; b++) {
						if (d[b].selected) {
							a = e(d[b]).val();
							if (g) {
								return a;
							}
							c.push(a);
						}
					}
					return c;
				}
				return (b.value || "").replace(/\r/g, "");
			}
			return y;
		}
		if (typeof a === "number") {
			a += "";
		}
		b = 0;
		d = this.length;
		for (var j; b < d; b++) {
			j = this[b];
			if (F(j, "select")) {
				c = I(a);
				e("option", j).each(function () {
					j.selected = O(j.value, c) >= 0 || O(j.text, c) >= 0;
				});
				if (!c.length) {
					j.selectedIndex = -1;
				}
			} else {
				j.value = a;
			}
		}
		return this;
	}, css:function (a, b) {
		return U(this, a, b, "css");
	}, attr:function (a, b) {
		return U(this, a, b, "attr");
	}, addClass:function (a) {
		for (var b = 0, c = this.length, d, g = (a || "").split(V); b < c; b++) {
			d = this[b];
			if (d.className) {
				for (var h = " " + d.className + " ", j = 0, m = g.length; j < m; j++) {
					if (h.indexOf(" " + g[j] + " ") < 0) {
						d.className += " " + g[j];
					}
				}
			} else {
				d.className = a;
			}
		}
		return this;
	}, removeClass:function (a) {
		for (var b = 0, c = this.length, d, g = (a || "").split(V); b < c; b++) {
			d = this[b];
			if (a) {
				for (var h = (" " + d.className + " ").replace(oa, " "), j = 0, m = g.length; j < m; j++) {
					h = h.replace(" " + g[j] + " ", " ");
				}
				d.className = h.substring(1, h.length - 1);
			} else {
				d.className = "";
			}
		}
		return this;
	}, removeAttr:function (a) {
		for (var b = 0, c = this.length; b < c; b++) {
			e.attr(this[b], a, "");
			this[b].nodeType === 1 && this[b].removeAttribute(a);
		}
		return this;
	}, remove:function () {
		for (var a = 0, b = this.length, c; a < b; a++) {
			c = this[a];
			if (c.nodeType === 1) {
				M(c.getElementsByTagName("*"));
				M([c]);
			}
			c.parentNode && c.parentNode.removeChild(c);
		}
		return this;
	}, empty:function () {
		for (var a = 0, b = this.length, c; a < b; a++) {
			c = this[a];
			for (c.nodeType === 1 && M(c.getElementsByTagName("*")); c.firstChild; ) {
				c.removeChild(c.firstChild);
			}
		}
		return this;
	}, map:function (a) {
		return this.setArray(P(this, function (b, c) {
			return a.call(b, c, b);
		}));
	}, filter:function (a) {
		return this.setArray(pa(this, function (b, c) {
			return a.call(b, c, b);
		}));
	}, is:function (a) {
		if (!a) {
			return false;
		}
		a = e.find(a, this[0].ownerDocument || this[0]);
		for (var b = 0, c = this.length; b < c; b++) {
			if (O(this[b], a) >= 0) {
				return true;
			}
		}
		return false;
	}, append:function () {
		return this.insert(arguments, true, function (a) {
			this.nodeType === 1 && this.appendChild(a);
		});
	}, prepend:function () {
		return this.insert(arguments, true, function (a) {
			this.nodeType === 1 && this.insertBefore(a, this.firstChild);
		});
	}, before:function () {
		return this.insert(arguments, false, function (a) {
			this.parentNode.insertBefore(a, this);
		});
	}, after:function () {
		return this.insert(arguments, false, function (a) {
			this.parentNode.insertBefore(a, this.nextSibling);
		});
	}, insert:function (a, b, c) {
		function d(r, G) {
			return b && F(r, "table") && F(G, "tr") ? r.getElementsByTagName("tbody")[0] || r.appendChild(r.ownerDocument.createElement("tbody")) : r;
		}
		var g, h = [];
		if (this[0]) {
			a = a[0] && a[0].parentNode && a[0].parentNode.nodeType === 11 ? a[0].parentNode : T(a, this, h);
			if (g = a.firstChild) {
				b = b && F(g, "tr");
				for (var j = 0, m = this.length; j < m; j++) {
					c.call(b ? d(this[j], g) : this[j], this.length > 1 || j > 0 ? a.cloneNode(true) : a);
				}
			}
			h.length > 0 && e.each(h, qa);
		}
		return this;
	}};
	e.fn.init.prototype = e.fn;
	e.extend = e.fn.extend = function () {
		var a = arguments[0] || {}, b = 1, c;
		if (arguments.length === b) {
			a = this;
			--b;
		}
		b = arguments[b];
		for (var d in b) {
			c = b[d];
			if (a !== c) {
				a[d] = typeof c === "object" && !J(c) ? arguments.callee(a[d] || {}, c) : c;
			}
		}
		return a;
	};
	e.extend({isFunction:function (a) {
		return S.call(a) === "[object Function]";
	}, isArray:function (a) {
		return S.call(a) === "[object Array]";
	}, trim:function (a) {
		return (a || "").replace(ma, "");
	}, globalEval:function (a) {
		if (a && /\S/.test(a)) {
			var b = document.getElementsByTagName("head")[0] || document.documentElement, c = document.createElement("script");
			c.type = "text/javascript";
			if (z.ie) {
				c.text = a;
			} else {
				c.appendChild(document.createTextNode(a));
			}
			b.insertBefore(c, b.firstChild);
			b.removeChild(c);
		}
	}, now:function () {
		return (new Date).getTime();
	}, nodeName:function (a, b) {
		return a.nodeName && a.nodeName.toUpperCase() == b.toUpperCase();
	}, each:function (a, b) {
		var c, d = 0, g = a.length;
		if (g === y) {
			for (c in a) {
				if (b.call(a[c], c, a[c]) === false) {
					break;
				}
			}
		} else {
			for (c = a[0]; d < g && b.call(c, d, c) !== false; c = a[++d]) {
			}
		}
		return a;
	}});
	e.extend({toArray:function (a) {
		var b = [];
		if (a != null) {
			var c = a.length;
			if (c == null || typeof a === "string" || W(a) || a.setInterval) {
				b[0] = a;
			} else {
				for (; c; ) {
					b[--c] = a[c];
				}
			}
		}
		return b;
	}, inArray:function (a, b) {
		if (b.indexOf) {
			return b.indexOf(a);
		} else {
			for (var c = 0, d = b.length; c < d; c++) {
				if (b[c] === a) {
					return c;
				}
			}
			return -1;
		}
	}, grep:function (a, b, c) {
		for (var d = [], g = 0, h = a.length; g < h; g++) {
			!c != !b(a[g], g) && d.push(a[g]);
		}
		return d;
	}, map:function (a, b) {
		for (var c = [], d = 0, g = a.length; d < g; d++) {
			var h = b(a[d], d);
			if (h != null) {
				c[c.length] = h;
			}
		}
		return c.concat.apply([], c);
	}});
	(function () {
		var a = document, b = !!x.ActiveXObject;
		e.browser = {ie:b, i7:b && !!x.XMLHttpRequest, i8:b && !!a.querySelectorAll, op:!!x.opera, ff:!!x.Components, sa:!!x.openDatabase};
		e.dtd = a.compatMode == "CSS1Compat" ? a.documentElement : a.body;
	})();
	var W = e.isFunction, J = e.isArray, pa = e.grep, P = e.map, O = e.inArray, I = e.toArray, z = e.browser, F = e.nodeName;
	e.extend({cache:{guid:1, fuid:1, func:function (a) {
		return function () {
			e.event.handle.apply(e.cache[a].elem, arguments);
		};
	}}, event:{add:function (a, b, c) {
		var d = a.lhguid || (a.lhguid = e.cache.guid++);
		e.cache[d] || (e.cache[d] = {elem:a, listener:e.cache.func(d), events:{}});
		if (b && !e.cache[d].events[b]) {
			e.cache[d].events[b] = {};
			if (a.addEventListener) {
				a.addEventListener(b, e.cache[d].listener, false);
			} else {
				a.attachEvent && a.attachEvent("on" + b, e.cache[d].listener);
			}
		}
		if (c) {
			if (!c.fuid) {
				c.fuid = e.cache.fuid++;
			}
			e.cache[d].events[b][c.fuid] = c;
		}
	}, remove:function (a, b, c) {
		try {
			var d = e.cache ? e.cache[a.lhguid] : y, g, h;
		}
		catch (j) {
			return;
		}
		if (d) {
			g = d.events;
			if (b === y) {
				for (b in g) {
					this.remove(a, b);
				}
			} else {
				if (g[b]) {
					if (c) {
						delete g[b][c.fuid];
					} else {
						for (var m in g[b]) {
							delete g[b][m];
						}
					}
					for (h in g[b]) {
						break;
					}
					if (!h) {
						if (a.removeEventListener) {
							a.removeEventListener(b, d.listener, false);
						} else {
							a.detachEvent && a.detachEvent("on" + b, d.listener);
						}
						h = null;
						delete g[b];
					}
				}
			}
			for (h in g) {
				break;
			}
			if (!h) {
				delete e.cache[a.lhguid];
				try {
					delete a.lhguid;
				}
				catch (r) {
					a.removeAttribute && a.removeAttribute("lhguid");
				}
			}
		}
	}, handle:function (a) {
		a = a = e.event.fix(a || x.event);
		if (!a.currentTarget) {
			a.currentTarget = this;
		}
		var b = e.cache[this.lhguid].events[a.type];
		for (var c in b) {
			this.func = b[c];
			if (this.func(a) === false) {
				a.preventDefault();
				a.stopPropagation();
			}
		}
	}, fix:function (a) {
		if (!a.preventDefault) {
			a.preventDefault = ra;
		}
		if (!a.stopPropagation) {
			a.stopPropagation = sa;
		}
		if (!a.target) {
			a.target = a.srcElement || document;
		}
		if (a.pageX == null && a.clientX != null) {
			var b = document.documentElement, c = document.body;
			a.pageX = a.clientX + (b && b.scrollLeft || c && c.scrollLeft || 0) - (b.clientLeft || 0);
			a.pageY = a.clientY + (b && b.scrollTop || c && c.scrollTop || 0) - (b.clientTop || 0);
		}
		return a;
	}}});
	var ra = function () {
		this.returnValue = false;
	}, sa = function () {
		this.cancelBubble = true;
	}, M = function (a) {
		for (var b = 0, c; (c = a[b]) != null; b++) {
			if (c = c.lhguid) {
				delete e.cache[c];
			}
		}
	};
	e.each("blur,focus,load,resize,scroll,unload,click,dblclick,contextmenu,mousedown,mouseup,mousemove,mouseover,mouseout,mouseenter,mouseleave,change,select,submit,keydown,keypress,keyup,error".split(","), function (a, b) {
		e.fn[b] = function (c) {
			for (var d = 0, g = this.length; d < g; d++) {
				e.event.remove(this[d], b);
				this[d]["on" + b] = null;
				e.event.add(this[d], b, c);
			}
			return this;
		};
	});
	z.ie && x.attachEvent("onunload", function () {
		for (var a in e.cache) {
			e.event.remove(e.cache[a].elem);
		}
	});
	(function () {
		var a = document, b = !!a.getElementsByClassName, c = !!a.querySelectorAll, d = /^[\w:.][\w-]*$/, g = / *, */, h = /([^[:.#]+)?(?:#([^[:.#]+))?(?:\.([^[:.]+))?(?:\[([^!&^*|$[:=]+)([!$^*|&]?=)?([^:\]]+)?\])?(?:\:([^(]+)(?:\(([^)]+)\))?)?/, j = /(?:(-?\d*)n)?(?:(%|-)(\d*))?/, m = /(~|>|\+)/, r = /(\([^)]*)\+/, G = /(\[[^\]]+)~/, t = / +/, s = {"":function (f, i) {
			return !!f.getAttribute(i);
		}, "=":function (f, i, k) {
			return (i = f.getAttribute(i)) && i === k;
		}, "^=":function (f, i, k) {
			return (i = f.getAttribute(i) + "") && !i.indexOf(k);
		}, "$=":function (f, i, k) {
			return (i = f.getAttribute(i) + "") && i.indexOf(k) == i.length - k.length;
		}, "*=":function (f, i, k) {
			return (i = f.getAttribute(i) + "") && i.indexOf(k) !== -1;
		}, "!=":function (f, i, k) {
			return !(i = f.getAttribute(i)) || !(new RegExp("(^| +)" + k + "($| +)")).test(i);
		}}, n = {"first-child":function (f) {
			return f.parentNode.getElementsByTagName("*")[0] === f;
		}, "last-child":function (f) {
			for (f = f; (f = f.nextSibling) && f.nodeType === 1; ) {
			}
			return !!f;
		}, "nth-child":function (f, i) {
			var k = f.nodeIndex || 0, q = i[3] = i[3] ? (i[2] === "%" ? -1 : 1) * i[3] : 0;
			i = i[1];
			if (k) {
				return (k + q) % i;
			} else {
				var l = f.parentNode.firstChild;
				k++;
				do {
					if (l.nodeType === 1 && (l.nodeIndex = ++k) && f === l && (k + q) % i) {
						return 0;
					}
				} while (l = l.nextSibling);
				return 1;
			}
		}, empty:function (f) {
			return !f.firstChild;
		}, parent:function (f) {
			return f.firstChild;
		}, checked:function (f) {
			return f.checked;
		}, enabled:function (f) {
			return !f.disabled && f.type !== "hidden";
		}, disabled:function (f) {
			return f.disabled;
		}, hidden:function (f) {
			return f.type === "hidden" || f.style.display === "none";
		}, visible:function (f) {
			return f.type !== "hidden" && f.style.display !== "none";
		}, selected:function (f) {
			return f.selected;
		}, radio:function (f) {
			return f.type === "radio";
		}, checkbox:function (f) {
			return f.type === "checkbox";
		}, text:function (f) {
			return f.type === "text";
		}, button:function (f) {
			return f.type === "button" || f.nodeName.toLowerCase() === "button";
		}};
		e.find = function (f, i) {
			i = i || a;
			var k = [];
			if (d.test(f) && i.nodeType) {
				var q = 0;
				switch (f.charAt(0)) {
				  case ".":
					var l = f.slice(1);
					if (b) {
						k = i.getElementsByClassName(l);
					} else {
						l = " " + l + " ";
						for (var u = i.getElementsByTagName("*"), H = 0; i = u[H++]; ) {
							if ((" " + i.className + " ").indexOf(l) !== -1) {
								k[q++] = i;
							}
						}
						k = q ? k : [];
					}
					break;
				  case ":":
					u = i.getElementsByTagName("*");
					H = 0;
					for (f = f.slice(1); i = u[H++]; ) {
						if (n[f] && n[f](i)) {
							k[q++] = i;
						}
					}
					k = q ? k : [];
					break;
				  default:
					k = i.getElementsByTagName(f);
					break;
				}
			} else {
				if (c) {
					try {
						return i.querySelectorAll(f);
					}
					catch (Ga) {
					}
				}
				for (var X = f.split(g), Y = X.length - 1, ta = !!Y, Z, $, p, Q, A, B, C, v, w, K, D, aa, o, L, N; q = X[Y--]; ) {
					$ = (Z = q.replace(r, "$1%").replace(G, "$1&").replace(m, " $1 ").split(t)).length;
					H = 0;
					Q = " ";
					for (u = i.nodeType ? [i] : I(i); p = Z[H++]; ) {
						if (p !== " " && p !== ">" && p !== "~" && p !== "+" && u) {
							p = p.match(h);
							A = p[1] || "*";
							B = p[2];
							C = p[3] ? " " + p[3] + " " : "";
							v = p[4];
							w = p[5] || "";
							f = p[7];
							K = f === "nth-child" ? j.exec(p[8] === "even" && "2n" || p[8] === "odd" && "2n%1" || !/\D/.test(p[8]) && "0n%" + p[8] || p[8]) : p[8];
							D = [];
							q = aa = 0;
							for (L = H == $; o = u[aa++]; ) {
								switch (Q) {
								  case " ":
									N = o.getElementsByTagName(A);
									for (o = 0; l = N[o++]; ) {
										if ((!B || l.id === B) && (!C || (" " + l.className + " ").indexOf(C) !== -1) && (!v || s[w] && (s[w](l, v, p[6]) || v === "class" && s[w](l, "className", p[6]))) && !l.yeasss && (n[f] ? n[f](l, K) : !f)) {
											if (L) {
												l.yeasss = 1;
											}
											D[q++] = l;
										}
									}
									break;
								  case "~":
									for (A = A.toLowerCase(); (o = o.nextSibling) && !o.yeasss; ) {
										if (o.nodeType === 1 && (A === "*" || o.nodeName.toLowerCase() === A) && (!B || o.id === B) && (!C || (" " + o.className + " ").indexOf(C) !== -1) && (!v || s[w] && (s[w](l, v, p[6]) || v === "class" && s[w](l, "className", p[6]))) && !o.yeasss && (n[f] ? n[f](o, K) : !f)) {
											if (L) {
												o.yeasss = 1;
											}
											D[q++] = o;
										}
									}
									break;
								  case "+":
									for (; (o = o.nextSibling) && o.nodeType !== 1; ) {
									}
									if (o && (o.nodeName.toLowerCase() === A.toLowerCase() || A === "*") && (!B || o.id === B) && (!C || (" " + l.className + " ").indexOf(C) !== -1) && (!v || s[w] && (s[w](l, v, p[6]) || v === "class" && s[w](l, "className", p[6]))) && !o.yeasss && (n[f] ? n[f](o, K) : !f)) {
										if (L) {
											o.yeasss = 1;
										}
										D[q++] = o;
									}
									break;
								  case ">":
									N = o.getElementsByTagName(A);
									for (H = 0; l = N[H++]; ) {
										if (l.parentNode === o && (!B || l.id === B) && (!C || (" " + l.className + " ").indexOf(C) !== -1) && (!v || s[w] && (s[w](l, v, p[6]) || v === "class" && s[w](l, "className", p[6]))) && !l.yeasss && (n[f] ? n[f](l, K) : !f)) {
											if (L) {
												l.yeasss = 1;
											}
											D[q++] = l;
										}
									}
									break;
								}
							}
							u = D;
						} else {
							Q = p;
						}
					}
					if (ta) {
						if (!u.concat) {
							D = [];
							for (o = 0; l = u[o]; ) {
								D[o++] = l;
							}
							u = D;
						}
						k = u.concat(k.length == 1 ? k[0] : k);
					} else {
						k = u;
					}
				}
				for (q = k.length; q--; ) {
					k[q].yeasss = k[q].nodeIndex = k[q].nodeIndexLast = null;
				}
			}
			return k;
		};
	})();
	var ba = document.defaultView || {}, ca = /href|src|style/, V = /\s+/, oa = /[\n\t]/g, da = /float/i, ea = /-([a-z])/ig, ua = /([A-Z])/g, fa = {"class":"className", "for":"htmlFor"}, va = {"float":z.ie ? "styleFloat" : "cssFloat"}, ga = function (a, b) {
		return b.toUpperCase();
	}, U = function (a, b, c, d) {
		var g = b, h = 0, j = a.length;
		if (typeof b === "string") {
			if (c === y) {
				d = d === "css" ? "getCSS" : "getAttr";
				return j ? e[d](a[0], b) : null;
			} else {
				g = {};
				g[b] = c;
			}
		}
		for (; h < j; h++) {
			for (b in g) {
				e[d](a[h], b, g[b]);
			}
		}
		return a;
	};
	e.extend({attr:function (a, b, c) {
		b = fa[b] || b;
		if (ca.test(b)) {
			if (b == "style" && z.ie) {
				a.style.cssText = c;
			} else {
				a.setAttribute(b, "" + c);
			}
		} else {
			a[b] = c;
		}
	}, getAttr:function (a, b) {
		b = fa[b] || b;
		var c = ca.test(b);
		if (c) {
			a = z.ie && c ? a.getAttribute(b, 2) : a.getAttribute(b);
			return a === null ? y : a;
		} else {
			if (F(a, "form") && a.getAttributeNode(b)) {
				return a.getAttributeNode(b).nodeValue;
			}
			return a[b];
		}
	}, css:function (a, b, c) {
		a = a.style;
		b = va[b] || b;
		if (z.ie && b == "opacity") {
			a.filter = (a.filter || "").replace(/alpha\([^)]*\)/, "") + (parseInt(c) + "" == "NaN" ? "" : "alpha(opacity=" + c * 100 + ")");
		} else {
			b = b.replace(ea, ga);
			a[b] = c;
		}
	}, getCSS:function (a, b) {
		var c, d = a.style;
		if (b == "opacity") {
			return z.ie ? d.filter && d.filter.indexOf("opacity=") >= 0 ? parseFloat(d.filter.match(/opacity=([^)]*)/)[1]) / 100 : 1 : d.opacity ? parseFloat(d.opacity) : 1;
		}
		if (da.test(b)) {
			b = e.props["float"];
		}
		if (d && d[b]) {
			c = d[b];
		} else {
			if (ba.getComputedStyle) {
				if (da.test(b)) {
					b = "float";
				}
				b = b.replace(ua, "-$1").toLowerCase();
				if (a = ba.getComputedStyle(a, null)) {
					c = a.getPropertyValue(b);
				}
			} else {
				if (a.currentStyle) {
					c = b.replace(ea, ga);
					c = a.currentStyle[b] || a.currentStyle[c];
				}
			}
		}
		return c;
	}});
	var na = /^<(\w+)\s*\/?>(?:<\/\1>)?$/, wa = /(<([\w:]+)[^>]*?)\/>/g, xa = /<|&\w+;/, ya = /<([\w:]+)/, za = /^(?:area|br|col|embed|hr|img|input|link|meta|param)$/i, Aa = function (a, b, c) {
		return za.test(c) ? a : b + "></" + c + ">";
	}, E = {option:[1, "<select multiple=\"multiple\">", "</select>"], legend:[1, "<fieldset>", "</fieldset>"], thead:[1, "<table>", "</table>"], tr:[2, "<table><tbody>", "</tbody></table>"], td:[3, "<table><tbody><tr>", "</tr></tbody></table>"], rdefault:[0, "", ""]};
	E.tbody = E.caption = E.thead;
	E.th = E.td;
	if (z.ie) {
		E.link = E.script = [1, "fix<div>", "</div>"];
	}
	var Ba = function (a, b, c, d) {
		b = b || document;
		if (typeof b.createElement === "undefined") {
			b = b.ownerDocument || b[0] && b[0].ownerDocument || document;
		}
		for (var g = [], h = 0, j = a.length, m; h < j; h++) {
			m = a[h];
			if (!m) {
				return;
			}
			if (typeof m === "string" && !xa.test(m)) {
				m = b.createTextNode(m);
			} else {
				if (typeof m === "string") {
					m = m.replace(wa, Aa);
					var r = (ya.exec(m) || ["", ""])[1].toLowerCase();
					r = E[r] || E.rdefault;
					var G = r[0], t = b.createElement("div");
					for (t.innerHTML = r[1] + m + r[2]; G--; ) {
						t = t.lastChild;
					}
					z.ie && /^\s+/.test(m) && t.insertBefore(b.createTextNode(/^\s+/.exec(m)[0]), t.firstChild);
					m = I(t.childNodes);
				}
			}
			if (m.nodeType) {
				g.push(m);
			} else {
				g = g.concat(m);
			}
		}
		if (c) {
			for (h = 0; g[h]; h++) {
				if (d && F(g[h], "script") && (!g[h].type || g[h].type.toLowerCase() === "text/javascript")) {
					d.push(g[h].parentNode ? g[h].parentNode.removeChild(g[h]) : g[h]);
				} else {
					g[h].nodeType === 1 && g.splice.apply(g, [h + 1, 0].concat(I(g[h].getElementsByTagName("script"))));
					c.appendChild(g[h]);
				}
			}
		}
		return g;
	}, T = function (a, b, c) {
		var d;
		if (a.length === 1 && typeof a[0] === "string") {
			d = e.fragments[a[0]];
		}
		if (!d) {
			b = b[0].ownerDocument || b[0];
			d = b.createDocumentFragment();
			Ba(a, b, d, c);
			e.fragments[a[0]] = d;
		}
		return d;
	};
	e.fragments = {};
	e.each({appendTo:"append", prependTo:"prepend", insertBefore:"before", insertAfter:"after"}, function (a, b) {
		e.fn[a] = function (c) {
			c = e(c, this[0].ownerDocument || this[0]);
			for (var d = 0, g = this.length; d < g; d++) {
				c[b](this[d]);
			}
			return this;
		};
	});
	var qa = function (a, b) {
		b.src ? e.ajax({url:b.src, async:false, dataType:"script"}) : e.globalEval(b.text || b.textContent || b.innerHTML || "");
		b.parentNode && b.parentNode.removeChild(b);
	}, R = function (a, b) {
		var c = [];
		for (a = a[b]; a && a != document; ) {
			a.nodeType === 1 && c.push(a);
			a = a[b];
		}
		return c;
	}, ha = function (a, b, c) {
		b = b || 1;
		for (var d = 0; a; a = a[c]) {
			if (a.nodeType == 1 && ++d == b) {
				break;
			}
		}
		return a;
	}, ia = function (a, b) {
		for (var c = []; a; a = a.nextSibling) {
			a.nodeType == 1 && a != b && c.push(a);
		}
		return c;
	};
	e.each({parent:function (a) {
		return a.parentNode;
	}, parents:function (a) {
		return R(a, "parentNode");
	}, next:function (a) {
		return ha(a, 2, "nextSibling");
	}, prev:function (a) {
		return ha(a, 2, "previousSibling");
	}, nextAll:function (a) {
		return R(a, "nextSibling");
	}, prevAll:function (a) {
		return R(a, "previousSibling");
	}, siblings:function (a) {
		return ia(a.parentNode.firstChild, a);
	}, children:function (a) {
		return ia(a.firstChild);
	}}, function (a, b) {
		e.fn[a] = function (c) {
			var d = P(this, b), g = [];
			if (c && typeof c === "string") {
				for (var h = 0, j = d.length; h < j; h++) {
					e(d[h]).is(c) && g.push(d[h]);
				}
				d = g;
			}
			return this.setArray(d);
		};
	});
	var Ca = /select|textarea/i, Da = /text|hidden|password|search/i, Ea = /(\?|&)_=.*?(&|$)/, Fa = /%20/g;
	e.fn.extend({serialize:function () {
		return e.param(this.serializeArray());
	}, serializeArray:function () {
		return this.map(function () {
			return this.elements ? I(this.elements) : this;
		}).filter(function () {
			return this.name && !this.disabled && (this.checked || Ca.test(this.nodeName) || Da.test(this.type));
		}).map(function () {
			var a = e(this).val();
			return a == null ? null : J(a) ? P(a, function (b) {
				return {name:elem.name, value:b};
			}) : {name:elem.name, value:a};
		}).get();
	}});
	e.extend({ajaxSet:{url:location.href, type:"GET", contentType:"application/x-www-form-urlencoded", async:true, xhr:function () {
		return x.ActiveXObject ? new ActiveXObject("Microsoft.XMLHTTP") : new XMLHttpRequest;
	}, accepts:{xml:"application/xml, text/xml", html:"text/html", script:"text/javascript, application/javascript", json:"application/json, text/javascript", text:"text/plain", rdefault:"*/*"}}, ajax:function (a) {
		function b() {
			a.success && a.success(g, d);
		}
		function c() {
			a.complete && a.complete(n, d);
		}
		a = e.extend(e.ajaxSet, a);
		var d, g, h = a.type.toUpperCase();
		if (a.data && typeof a.data !== "string") {
			a.data = e.param(a.data);
		}
		if (a.dataType == "script" && a.cache == null) {
			a.cache = false;
		}
		if (a.cache === false && h == "GET") {
			var j = e.now(), m = a.url.replace(Ea, "$1_=" + j + "$2");
			a.url = m + (m == a.url ? (a.url.match(/\?/) ? "&" : "?") + "_=" + j : "");
		}
		if (a.data && h == "GET") {
			a.url += (a.url.match(/\?/) ? "&" : "?") + a.data;
			a.data = null;
		}
		j = /^(\w+:)?\/\/([^\/?#]+)/.exec(a.url);
		if (a.dataType == "script" && h == "GET" && j && (j[1] && j[1] != location.protocol || j[2] != location.host)) {
			var r = false, G = document.getElementsByTagName("head")[0], t = document.createElement("script");
			t.onload = t.onreadystatechange = function () {
				if (!r && (!this.readyState || this.readyState == "loaded" || this.readyState == "complete")) {
					r = true;
					b();
					c();
					t.onload = t.onreadystatechange = null;
					G.removeChild(t);
				}
			};
			G.appendChild(t);
			return y;
		}
		var s = false, n = a.xhr();
		a.username ? n.open(h, a.url, a.async, a.username, a.password) : n.open(h, a.url, a.async);
		try {
			a.data && n.setRequestHeader("Content-Type", a.contentType);
			n.setRequestHeader("X-Requested-With", "XMLHttpRequest");
			n.setRequestHeader("Accept", a.dataType && a.accepts[a.dataType] ? a.accepts[a.dataType] + ", */*" : a.accepts.rdefault);
		}
		catch (f) {
		}
		if (a.beforeSend && a.beforeSend(n, a) === false) {
			n.abort();
			return false;
		}
		var i = function (l) {
			if (n.readyState == 0) {
				if (k) {
					clearInterval(k);
					k = null;
				}
			} else {
				if (!s && n && (n.readyState == 4 || l == "timeout")) {
					s = true;
					if (k) {
						clearInterval(k);
						k = null;
					}
					d = l == "timeout" ? "timeout" : !e.httpSuccess(n) ? "error" : "success";
					if (d == "success") {
						try {
							g = e.httpData(n, a.dataType, a);
						}
						catch (u) {
							d = "parsererror";
						}
					}
					d == "success" ? b() : e.handleError(a, n, d);
					c();
					l && n.abort();
					if (a.async) {
						n = null;
					}
				}
			}
		};
		if (a.async) {
			var k = setInterval(i, 13);
			a.timeout > 0 && setTimeout(function () {
				n && !s && i("timeout");
			}, a.timeout);
		}
		try {
			n.send(a.data);
		}
		catch (q) {
			e.handleError(a, n, null, q);
		}
		a.async || i();
		return n;
	}, handleError:function (a, b, c, d) {
		a.error && a.error(b, c, d);
	}, httpSuccess:function (a) {
		try {
			return !a.status && location.protocol == "file:" || a.status >= 200 && a.status < 300 || a.status == 304 || a.status == 1223;
		}
		catch (b) {
		}
		return false;
	}, httpData:function (a, b) {
		var c = a.getResponseHeader("content-type");
		a = (c = b == "xml" || !b && c && c.indexOf("xml") >= 0) ? a.responseXML : a.responseText;
		if (c && a.documentElement.tagName == "parsererror") {
			throw "parsererror";
		}
		if (typeof a === "string") {
			b == "script" && e.globalEval(a);
			if (b == "json") {
				a = x.eval("(" + a + ")");
			}
		}
		return a;
	}, param:function (a) {
		function b(j, m) {
			c[c.length] = encodeURIComponent(j) + "=" + encodeURIComponent(m);
		}
		var c = [];
		if (J(a) || a.lhgren) {
			for (var d = 0, g = a.length; d < g; d++) {
				b(this[d].name, this[d].value);
			}
		} else {
			for (var h in a) {
				if (J(a[h])) {
					d = 0;
					for (g = a[h].length; d < g; d++) {
						b(h, a[h][d]);
					}
				} else {
					b(h, W(a[h]) ? a[h]() : a[h]);
				}
			}
		}
		return c.join("&").replace(Fa, "+");
	}});
	x.lhgcore = x.J = e;
})();

